export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWUNTRACKEDFILES=true

setopt PROMPT_SUBST

if [ -z "${DISPLAY}" ] && [ "${XDG_VTNR}" -eq 1 ]; then
  exec startx
fi


export EDITOR=nvim

# Enable colors and change prompt:
autoload -U colors && colors	# Load colors
# PS1='%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M %{$fg[magenta]%}%~%{$fg[red]%}]%{$fg[white]%}$(__git_ps1 " (%s) ")%{$reset_color%}$%b '
PS1='%B%F{red}[%F{yellow}%n%F{green}@%F{blue}%M %F{magenta}%1d%F{red}]%f$%b '
RPROMPT='%f$(__git_ps1 " (%s) ") %w %*'
setopt autocd		# Automatically cd into typed directory.
stty stop undef		# Disable ctrl-s to freeze terminal.
setopt interactive_comments

# History in cache directory:
HISTSIZE=10000000
SAVEHIST=10000000
HISTFILE=~/.cache/zsh/history

for file in $(ls -p ~/.config/zsh/aliases | grep -v /); do
	source ~/.config/zsh/aliases/$file
done

# Basic auto/tab complete:
autoload -U compinit
zstyle ':completion:*' menu select
zmodload zsh/complist
compinit -d ~/.cache/zsh/zcompdump
_comp_options+=(globdots)		# Include hidden files.

# vi mode
bindkey -v
export KEYTIMEOUT=1

# Use vim keys in tab complete menu:
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -v '^?' backward-delete-char
bindkey -v '^[[3~' delete-char

bindkey ' ' magic-space

# Change cursor shape for different vi modes.
function zle-keymap-select () {
    case $KEYMAP in
        vicmd) echo -ne '\e[1 q';;      # block
        viins|main) echo -ne '\e[5 q';; # beam
    esac
}
zle -N zle-keymap-select
zle-line-init() {
    zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
    echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.

# Edit line in vim with ctrl-e:
autoload edit-command-line; zle -N edit-command-line
bindkey '^e' edit-command-line

# Load syntax highlighting; should be last.
source /home/bshtrepi/Documents/repos/zsh-plugins/fzf-tab/fzf-tab.plugin.zsh
source ~/Documents/repos/zsh-plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source ~/.config/zsh/kubectl_autocomplete
# source ~/github/zsh-autosuggestions/zsh-autosuggestions.zsh

# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# preview directory's content with exa when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa -1 --color=always $realpath'
# switch group using `,` and `.`
zstyle ':fzf-tab:*' switch-group ',' '.'
# extra configuration for fzf-tab
zstyle ':fzf-tab:complete:systemctl-*:*' fzf-preview 'SYSTEMD_COLORS=1 systemctl status $word'
zstyle ':fzf-tab:*' continous-trigger '/'
zstyle ':fzf-tab:*' fzf-pad 4

# arrows search history
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down

# Reassing searching
bindkey '^r' history-incremental-search-backward

# Calculator shortcut
bindkey -s '^a' '^ubc -lq\n'

# Notes shortcut
bindkey -s '^n' '^unotes\n'

# cd Fuzzy Finder
bindkey -s '^f' '^ucd "$(dirname "$(fzf)")"\n'
bindkey -s '^g' '^ucd "$(find ~/Documents/source -maxdepth 1 -mindepth 1 -type d | fzf)"\n'
export PATH=/home/bshtrepi/.cargo/bin:/usr/local/go/bin:$PATH 
export DOTNET_ROOT=/usr/share/dotnet
export FZF_DEFAULT_OPTS='--height 30% --layout=reverse --border'
export ZSH_COMPDUMP=/home/bshtrepi/.cache/zsh/zcompdump

export MOZ_USE_XINPUT2=1

source /home/bshtrepi/.config/zsh/.fzf.zsh
